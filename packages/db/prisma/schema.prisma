// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client"
  output   = "./generated"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model GlobalSettings {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  guildId         String
  ignoredChannels String[] @default([])
  ignoredUsers    String[] @default([])

  // Relations
  templates GlobalSettingsTemplate[]

  @@unique([guildId])
}

model Settings {
  id              String      @id @default(auto()) @map("_id") @db.ObjectId
  guildId         String
  channelId       String
  ignoredChannels String[]    @default([])
  ignoredUsers    String[]    @default([])
  watchingEvents  EventType[] @default([])
  watchChannels   String[]    @default([])
  watchUsers      String[]    @default([])

  // Relations
  templates SettingsTemplate[]

  @@unique([guildId, channelId])
}

model Template {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  guildId     String
  name        String
  description String?
  eventType   EventType

  // Discord MessageEmbedOptions as JSON
  embedOptions Json

  // Relations
  settings       SettingsTemplate[]
  globalSettings GlobalSettingsTemplate[]
}

model SettingsTemplate {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  settingsId String    @db.ObjectId
  templateId String    @db.ObjectId
  eventType  EventType

  // Relations
  settings Settings @relation(fields: [settingsId], references: [id], onDelete: Cascade)
  template Template @relation(fields: [templateId], references: [id], onDelete: Cascade)

  // Ensure only one template per event type per settings
  @@unique([settingsId, eventType])
}

model GlobalSettingsTemplate {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  globalSettingsId String    @db.ObjectId
  templateId       String    @db.ObjectId
  eventType        EventType

  // Relations
  globalSettings GlobalSettings @relation(fields: [globalSettingsId], references: [id], onDelete: Cascade)
  template       Template       @relation(fields: [templateId], references: [id], onDelete: Cascade)

  // Ensure only one template per event type per global settings
  @@unique([globalSettingsId, eventType])
}

model Session {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String @unique
  userId       String
}

enum EventType {
  guildMemberAdd
  guildMemberRemove
  messageDelete
  messageBulkDelete
  messageUpdate
  messageReactionAdd
  messageReactionRemove
  guildMemberNicknameChange
  guildMemberAvatarChange
  guildMemberRoleAdd
  guildMemberRoleRemove
  guildMemberRoleBulkUpdate
  guildBanAdd
  guildBanRemove
  guildMemberKick
  guildMemberRulesAccepted
  roleCreate
  roleUpdate
  roleDelete
  inviteCreate
  invitePosted
  inviteDelete
  channelCreate
  channelUpdate
  channelDelete
  channelPermissionUpdate
  voiceChannelJoin
  voiceChannelMove
  voiceChannelLeave
  voiceChannelMemberMute
  voiceChannelMemberDeafened
  emojiAdd
  emojiUpdate
  emojiDelete
  stickerAdd
  stickerUpdate
  stickerDelete
  botAdd
  guildUpdate
}
